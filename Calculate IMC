import 'package:flutter/material.dart';
​
final Color darkBlue = Color.fromARGB(255, 18, 32, 47);
​
void main() {
  runApp(MaterialApp(title: "App IMC", home: Home()));
}
​
class Home extends StatefulWidget {
  @override
  _HomeState createState() => _HomeState();
}
​
class _HomeState extends State<Home> {
  TextEditingController weightController = TextEditingController();
  TextEditingController heightController = TextEditingController();
  GlobalKey<FormState> _formKey = GlobalKey<FormState>();
​
  String _info = "informe seus dados ";
​
  void _reset() {
    weightController.text = "";
    heightController.text = "";
    setState(() {
      _info = "Informe seus dados ";
      _formKey = GlobalKey<FormState>();
    });
  }
​
    calculateIMC() {
    setState(() {
      double weight = double.parse(weightController.text);
      double height = double.parse(heightController.text) / 100;
      double imc = weight / (height * height);
      print(imc);
​
      if (imc < 18.6) {
        _info = "abaixo do peso (${imc.toStringAsPrecision(4)})";
      } else if (imc >= 18.6 && imc < 24.9) {
        _info = "Peso ideal (${imc.toStringAsPrecision(4)})";
      } else if (imc <= 24.9 && imc < 29.9) {
        _info = "Levemente acima do peso (${imc.toStringAsPrecision(4)})";
      } else if (imc <= 29.9 && imc < 34.9) {
        _info = "Obesidade grau I (${imc.toStringAsPrecision(4)})";
      } else if (imc <= 34.9 && imc < 39.9) {
        _info = "Obesidade grau II (${imc.toStringAsPrecision(4)})";
      } else {
        _info = "Obesidade grau II (${imc.toStringAsPrecision(4)})";
      }
    });
  }
​
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
          title: Text("Calculadora de IMC"),
          centerTitle: true,
          backgroundColor: Colors.cyanAccent,
          actions: <Widget>[
            IconButton(
              icon: Icon(Icons.refresh),
              onPressed: _reset,
            ) //Widget
          ] //actions
​
          ), // Barra do aplicativo
​
      backgroundColor: Colors.white,
      body: SingleChildScrollView(
        padding: EdgeInsets.fromLTRB(10.0, 0.0, 10.0, 0.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment
                .stretch, // faz ocupar toda a largura menos o icone da pessoa pq foi definido no código
            children: <Widget>[
              Icon(Icons.person_outline, size: 100.0, color: Colors.cyanAccent),
              TextFormField(
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                    labelText: "Peso (kg)",
                    labelStyle:
                        TextStyle(color: Colors.cyanAccent)), //InputDecoration
​
                textAlign: TextAlign.center,
                style: TextStyle(color: Colors.cyanAccent, fontSize: 20.0),
                controller: weightController,
               // validator: (value) {
               //   if(value.isEmpty){
                //    return "Insira seu peso";
                //  }
             //   },
              ), //TextField1 Peso
​
              TextFormField(
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                    labelText: "Altura (CM)",
                    labelStyle:
                        TextStyle(color: Colors.cyanAccent)), //InputDecoration
​
                textAlign: TextAlign.center,
                style: TextStyle(color: Colors.cyanAccent, fontSize: 20.0),
                controller: heightController,
               // validator: (value){
               //   if (value.isEmpty){
               //     return "Insira sua Altura";
               //   }
                //},
              ), //TextField2 Altura
              Padding(
                padding: EdgeInsets.only(top: 20.0, bottom: 20.0),
                child: Container(
                  height: 40.0,
                  child: RaisedButton(
                    onPressed: (){
                      if (_formKey.currentState.validate()){
                        calculateIMC();
                      }
                    },
                    child: Text("Calcular.",
                        style: TextStyle(color: Colors.white, fontSize: 25.0)),
                    color: Colors.cyanAccent,
                  ), //RaisesButton
                ), //Container
              ), //Padding
              Text(
                _info,
                textAlign: TextAlign.center,
                style: TextStyle(color: Colors.cyanAccent, fontSize: 20.0),
              ),
            ], //Widget
          ), //Column
        ), // form
      ), //SingleChildScrollView,
    ); //Scaffold
  } //Widget build
} // fim da classe _HomeState
​
